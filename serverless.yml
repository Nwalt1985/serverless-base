org: 'nathan85'
service: 'pricing-service'
frameworkVersion: '3'
useDotenv: true

plugins:
  - serverless-plugin-typescript
  - serverless-dynamodb-local
  - serverless-offline
  - serverless-dynamodb-autoscaling

custom:
  capacities:
    - table: pricingTable
      read:
        minimum: 5
        maximum: 1000
        usage: 0.75
      write:
        minimum: 40
        maximum: 200
        usage: 0.5
  dynamodb:
    stages:
      - dev
    start:
      migrate: true
      port: 8000
      inMemory: true
      heapInitial: 200m
      heapMax: 1g
      convertEmptyValues: true

provider:
  name: aws
  stage: ${opt:stage, 'dev'}
  runtime: nodejs14.x
  region: eu-west-2
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - Fn::GetAtt: [pricingTable, Arn]
    - Effect: 'Allow'
      Action:
        - dynamodb:Query
      Resource: '*'
  environment:
    NODE_OPTIONS: '--enable-source-maps'
    CONFIG_REGION: ${self:provider.region}
    DYNAMODB_TABLE_NAME: pricing-${self:provider.stage}

functions:
  uploadCSV:
    name: uploadCSV-${self:provider.stage}
    handler: ./src/handlers/post/uploadCSV.handler
    events:
      - http:
          path: pricing/upload
          method: POST
          cors: true

resources:
  Resources:
    pricingTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: pricing-${self:provider.stage}
        AttributeDefinitions:
          - AttributeName: sku
            AttributeType: S
        KeySchema:
          - AttributeName: sku
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
